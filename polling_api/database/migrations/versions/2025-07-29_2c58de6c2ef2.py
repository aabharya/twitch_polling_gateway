"""empty message

Revision ID: 2c58de6c2ef2
Revises: 
Create Date: 2025-07-29 23:19:00.059861

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2c58de6c2ef2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=32), nullable=True),
    sa.Column('role', sa.Enum('MODERATOR', 'VIEWER', name='userrole'), nullable=False),
    sa.Column('first_name', sa.String(length=256), nullable=True),
    sa.Column('last_name', sa.String(length=256), nullable=True),
    sa.Column('email', sa.String(length=256), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('public_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('users_pkey'))
    )
    op.create_index(op.f('users_email_idx'), 'users', ['email'], unique=True)
    op.create_index(op.f('users_public_id_idx'), 'users', ['public_id'], unique=True)
    op.create_index(op.f('users_username_idx'), 'users', ['username'], unique=True)
    op.create_table('polls',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=64), nullable=False),
    sa.Column('status', sa.Enum('CREATED', 'STARTED', 'FINISHED', 'CANCELED', name='pollstatus'), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('finished_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name=op.f('polls_created_by_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('polls_pkey'))
    )
    op.create_index('idx_polls_finished_at', 'polls', ['finished_at'], unique=False)
    op.create_table('poll_options',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=128), nullable=False),
    sa.Column('poll_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['poll_id'], ['polls.id'], name=op.f('poll_options_poll_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('poll_options_pkey'))
    )
    op.create_table('votes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('poll_id', sa.Integer(), nullable=False),
    sa.Column('option_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['option_id'], ['poll_options.id'], name=op.f('votes_option_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['poll_id'], ['polls.id'], name=op.f('votes_poll_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('votes_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('votes_pkey')),
    sa.UniqueConstraint('user_id', 'poll_id', name='unique_vote_user_poll')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('votes')
    op.drop_table('poll_options')
    op.drop_index('idx_polls_finished_at', table_name='polls')
    op.drop_table('polls')
    op.drop_index(op.f('users_username_idx'), table_name='users')
    op.drop_index(op.f('users_public_id_idx'), table_name='users')
    op.drop_index(op.f('users_email_idx'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
